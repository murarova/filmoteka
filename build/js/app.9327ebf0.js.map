{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/noavailable.png","webpack:///./src/scripts/services/callApi.js","webpack:///./src/scripts/services/callApiFull.js","webpack:///./src/scripts/model.js","webpack:///./src/scripts/view.js","webpack:///./src/scripts/controller.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","url","apiKey","page","callApi","search","pageNum","fetch","then","response","ok","json","Error","concat","statusText","catch","error","console","Model","_classCallCheck","this","queryFilmList","viewedFilms","viewLaterFilms","favoriteFilms","lastPage","lastQueryTotal","lastFilm","lastQuery","filmoteka","totalPages","type","arguments","undefined","storage","x","setItem","removeItem","e","localStorageAvailable","localStorage","JSON","stringify","log","filmotekaFromLocalStorage","parse","getItem","localStorageRead","listName","film","reverse","filter","item","imdbID","query","_this","searchResults","replace","Response","Search","totalResults","Math","ceil","localStorageWrite","id","_this2","btnType","currPage","numPages","_this3","libraryListName","_ref","action","isFilmInList","addFilmToList","deleteFilmFromList","find","View","view_classCallCheck","_getPrototypeOf","app","document","querySelector","startPage","mainPage","input","addEventListener","debounce","onInput","_assertThisInitialized","dataAboutFilmFromLocalStorage","filmPageBtnText","add","remove","setListener","EventEmitter","target","textContent","emit","header","footer","innerHTML","root","container","createElement","classList","append","cardList","logo","logoSpanFirst","logoSpanSec","menu","menuItemOne","menuItemTwo","myFilmoteka","tagName","state","getAttribute","makeFilmotekaPage","history","pushState","preventDefault","location","pathname","clearStarMaintPage","replaceState","clearStartMainPage","setAttribute","copy","copyFirst","copySec","team","title","form","card","imgSrc","img","link","getFilmID","idTarget","closest","idT","Poster","noavailable","Title","cardRating","Ratings","Value","imdbVotes","shownProp","Awards","Rating","Actors","Country","Genre","Runtime","cardPage","cardImage","cardInfo","cardTitle","description","cardYear","buttons","prop","Plot","Year","createFilmPageButtons","infoKey","keyValue","DOMElement","attribute","event","getDataAboutFilmFromLocalStorage","viewed","addAttribute","addActionAtrribute","takeListNameAndAction","changeActionAndLabel","planed","favourites","nodeName","list","label","text","button","inputText","clearCardsList","model","_this4","items","forEach","newCard","makeCard","controls","prev","createPaginationButton","pages","next","attributes","btnname","numpages","btnName","btn","disabled","handlePagination","switchBtn","parentNode","childNodes","node","makeLibraryButton","autofocus","message","arr","_this5","element","makeCardPage","Controller","view","controller_classCallCheck","on","handleSearch","handleFilmID","handlePaginationEvent","handleCreateFilmPage","handleList","handleBackToSearchResults","handleViewLaterFilms","handleFavorites","handleViewedFilms","updateCardsList","handleSearchQuery","resolve","reject","takeFilmInfo","createFilmPage","resolvePages","takeFilmInfoFromLocalStorage","handleListWithAction","getViewLaterFilmsFromLS","ifNothingToRender","cardsRender","getFavoriteFilmsFromLS","deleteAutofocus","getViewedFilmsFromLS","hrefShare","split","includes","redirectPage","el","renderById","checkRedirect"],"mappings":"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","file":"js/app.9327ebf0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([81,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"src/img/noavailable.png\";","const url = 'http://www.omdbapi.com/?s=';\r\nconst apiKey = '&apikey=4095ed63';\r\nconst page = '&page=';\r\n\r\nexport default function callApi(search, pageNum) {\r\n  return fetch(url + search + page + pageNum + apiKey)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(`Error while fetching: ${response.statusText}`);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n}\r\n","    const url = 'http://www.omdbapi.com/?i=';\r\n    const apiKey = '&apikey=4095ed63';\r\n    const full = '';\r\n\r\n    export default function callApi(imdbID) {\r\n      return fetch(url + imdbID + apiKey)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          throw new Error(`Error while fetching: ${response.statusText}`);\r\n        });\r\n    }\r\n","import callApi from \"./services/callApi\";\r\nimport callApiFull from \"./services/callApiFull\";\r\n// import { resolve } from \"dns\";\r\n\r\n\r\nexport default class Model {\r\n  constructor() {\r\n    //fields with films\r\n      (this.queryFilmList = []), //last 10 film showed after search querry\r\n      (this.viewedFilms = []),\r\n      (this.viewLaterFilms = []),\r\n      (this.favoriteFilms = []);\r\n    //last page and total for pagination\r\n      (this.lastPage = 1),\r\n      //total results in last query\r\n      (this.lastQueryTotal = 1),\r\n      //last viewed film in detailed form\r\n      (this.lastFilm = {});\r\n    //last query for search\r\n      this.lastQuery = \"\";\r\n\r\n    //object for writtting/reading to storage\r\n    this.filmoteka = {\r\n      queryFilmList: this.queryFilmList,\r\n      viewLaterFilms: this.viewLaterFilms,\r\n      viewedFilms: this.viewedFilms,\r\n      favoriteFilms: this.favoriteFilms,\r\n      lastQuery: this.lastQuery,\r\n      lastPage: this.lastPage,\r\n      totalPages: this.lastQueryTotal\r\n    };\r\n  }\r\n  //check if local storage exists\r\n  localStorageAvailable(type = \"localStorage\") {\r\n    try {\r\n      let storage = window[type];\r\n      let x = \"__storage_test__\";\r\n      storage.setItem(x, x);\r\n      storage.removeItem(x);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n  //write to local storage\r\n  localStorageWrite(filmoteka) {\r\n    if (this.localStorageAvailable) {\r\n      try {\r\n        localStorage.setItem(\"filmoteka\", JSON.stringify(this.filmoteka));\r\n      } catch (error) {\r\n        console.log(\"Error during writing from local storage\");\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n  //read from local storage\r\n  localStorageRead() {\r\n    // console.log('this.filmoteka befor=', this.filmoteka);\r\n    if (this.localStorageAvailable) {\r\n      try {\r\n        let filmotekaFromLocalStorage = JSON.parse(\r\n          localStorage.getItem(\"filmoteka\")\r\n        );\r\n        // console.log('filmotekaFromLocalStorage=', filmotekaFromLocalStorage);\r\n        if (filmotekaFromLocalStorage!==null) {\r\n\r\n          this.filmoteka = filmotekaFromLocalStorage;\r\n          // console.log('this.filmoteka=', this.filmoteka);\r\n        };\r\n        return;\r\n      } catch (error) {\r\n        console.log(\"Local Storage is empty\");\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  getFavoriteFilmsFromLS() {\r\n    this.localStorageRead();\r\n    //const localStoradgeObj = this.localStorageRead();\r\n    return this.filmoteka.favoriteFilms;\r\n  }\r\n\r\n  getViewedFilmsFromLS() {\r\n    this.localStorageRead();\r\n    //const localStoradgeObj = this.localStorageRead();\r\n    return this.filmoteka.viewedFilms;\r\n  }\r\n\r\n  getViewLaterFilmsFromLS() {\r\n    this.localStorageRead();\r\n    // console.log('this =', this);\r\n    // console.log('localStoradgeObj =', localStoradgeObj);\r\n    return this.filmoteka.viewLaterFilms;\r\n  }\r\n\r\n  //add film to list\r\n  addFilmToList(listName, film) {\r\n    this[listName].push(film);\r\n    //console.log(\"listName=\", this[listName]);\r\n    return this[listName].reverse();\r\n  }\r\n  //delete film from list\r\n  deleteFilmFromList(listName, film) {\r\n    //console.log(\"this[listName]=\", this[listName]);\r\n    return (this[listName] = this[listName].filter(item => {\r\n      // console.log(\"item=\", item);\r\n      // console.log(\"item.imdbID=\", item.imdbID);\r\n      // console.log(\"film=\", film);\r\n      // console.log(\"film.imdbID=\", film.imdbID);\r\n      // console.log(\"film.imdbID !== item.imdbID=\", film.imdbID !== item.imdbID);\r\n\r\n      return film.imdbID !== item.imdbID;\r\n    }));\r\n  }\r\n\r\n  //get queryFilmList from server\r\n  handleSearchQuery(query, page = 1) {\r\n    this.localStorageRead();\r\n    //console.log('this=',this);\r\n    this.lastQuery = query;\r\n    this.filmoteka.lastQuery = this.lastQuery;\r\n\r\n    // console.log('this.lastQuery =', this.lastQuery);\r\n    // console.log('query=', query);\r\n\r\n    const searchResults = callApi(\r\n      query.replace(/(^\\s*)|(\\s*)$/g, \"\"),\r\n      (page = 1)\r\n    );\r\n    searchResults.then(data => {\r\n      // console.log('data=', data);\r\n      // console.log('data.totalResults=', data.totalResults);\r\n      // console.log('data.Search=', data.Search);\r\n      if (data.Response) {\r\n        this.queryFilmList = data.Search;\r\n        this.lastQueryTotal = data.totalResults;\r\n        this.lastPage = page;\r\n        // console.log('data.Search=', data.Search);\r\n        // console.log('this.queryFilmList =', this.queryFilmList);\r\n        // console.log('this.lastQuery =', this.lastQuery);\r\n        // console.log('this.filmoteka =', this.filmoteka);\r\n        // console.log('this.lastQueryTotal = ', this.lastQueryTotal);\r\n        //this.localStorageRead();\r\n        this.filmoteka.totalPages = Math.ceil(this.lastQueryTotal / 10);\r\n        this.filmoteka.queryFilmList = this.queryFilmList;\r\n        this.localStorageWrite(this.filmoteka);\r\n\r\n        // Работа с страницами поиска\r\n        localStorage.setItem(\"numPages\", Math.ceil(this.lastQueryTotal / 10));\r\n        if (page == 1 || page == null) {\r\n          localStorage.setItem(\"currPage\", 1);\r\n        } else {\r\n          localStorage.setItem(\"currPage\", page);\r\n        }\r\n      }\r\n    });\r\n    return searchResults;\r\n  }\r\n  //take ifo about film\r\n  takeFilmInfo(id) {\r\n    // console.log('id in model=', id);\r\n    // this.filmoteka.lastFilm = this.lastFilm;\r\n    // this.localStorageWrite(this.filmoteka);\r\n    let filmInfo = null;\r\n    return (filmInfo = callApiFull(id).then(data => {\r\n      // console.log(\"data=\", data);\r\n      this.lastFilm = data;\r\n      // console.log(\"this.lastFilm=\", this.lastFilm);\r\n      this.localStorageRead();\r\n\r\n      this.filmoteka.totalPages = Math.ceil(this.lastQueryTotal / 10);\r\n      this.filmoteka.lastFilm = this.lastFilm;\r\n      this.localStorageWrite(this.filmoteka);\r\n      return this.lastFilm;\r\n    }));\r\n  }\r\n  //pagination\r\n  resolvePages(btnType, currPage, numPages) {\r\n    // console.log(\"btnType=\", btnType);\r\n    // console.log(\"currPage=\", currPage);\r\n    // console.log(\"numPages=\", numPages);\r\n    if (btnType === \"Prev\" && +currPage !== 1) {\r\n      this.lastPage = +currPage - 1;\r\n    } else this.lastPage;\r\n    if (btnType === \"Next\" && +currPage < +numPages) {\r\n      this.lastPage = +currPage + 1;\r\n    }\r\n\r\n    // console.log(\"this.lastPage=\", this.lastPage);\r\n    // console.log(\"this.lastQuery=\", this.lastQuery);\r\n\r\n    const searchResults = callApi(\r\n      this.lastQuery.replace(/(^\\s*)|(\\s*)$/g, \"\"),\r\n      this.lastPage\r\n    );\r\n    searchResults.then(data => {\r\n      // console.log('this.lastQuery=', this.lastQuery);\r\n      // console.log('this.lastPage inside searchresults=', this.lastPage);\r\n      // console.log('data=', data);\r\n      // console.log('data.totalResults=', data.totalResults);\r\n      // console.log('data.Search=', data.Search);\r\n      if (data.Response) {\r\n        this.queryFilmList = data.Search;\r\n        this.lastQueryTotal = data.totalResults;\r\n        //this.lastPage = page;\r\n        // console.log('data=', data);\r\n        // console.log('this.queryFilmList =', this.queryFilmList);\r\n        // console.log('this.lastQuery =', this.lastQuery);\r\n        // console.log('this.filmoteka =', this.filmoteka);\r\n        // console.log('this.lastQueryTotal = ', this.lastQueryTotal);\r\n        this.filmoteka.totalPages = Math.ceil(this.lastQueryTotal / 10);\r\n        this.filmoteka.lastPage = this.lastPage;\r\n        this.filmoteka.queryFilmList = this.queryFilmList;\r\n        this.localStorageWrite(this.filmoteka);\r\n      }\r\n    });\r\n    return searchResults;\r\n  }\r\n  //add or remove to list\r\n  handleListWithAction({ libraryListName, action }) {\r\n    // console.log('libraryListName in model= ', libraryListName);\r\n    // console.log('action in model= ', action);\r\n    // console.log('this in model= ', this);\r\n    if (action === \"add\") {\r\n      //console.log('inside add');\r\n      if (this.isFilmInList(libraryListName, this.lastFilm.imdbID)) return;\r\n      this.addFilmToList(libraryListName, this.lastFilm);\r\n    }\r\n    //console.log('this in model after add action= ', this);\r\n    if (action === \"remove\") {\r\n      //console.log('action===\"remove\"');\r\n      //console.log('this[libraryListName]=', this[libraryListName]);\r\n      //console.log('this.lastFilm=', this.lastFilm);\r\n      //console.log('this[libraryListName].includes(this.lastFilm)=', this[libraryListName].includes(this.lastFilm));\r\n      if (!this.isFilmInList(libraryListName, this.lastFilm.imdbID)) return;\r\n      this.deleteFilmFromList(libraryListName, this.lastFilm);\r\n    }\r\n    //console.log('this in model after delete action= ', this);\r\n    this.filmoteka[libraryListName] = this[libraryListName];\r\n    this.localStorageWrite(this.filmoteka);\r\n  }\r\n\r\n  isFilmInList(listName, id) {\r\n    if (this[listName].length === 0) return false;\r\n    return this[listName].find(item => item.imdbID === id);\r\n  }\r\n  takeFilmInfoFromLocalStorage(id) {\r\n    //console.log(\"this in model id=\", id);\r\n    //console.log(id);\r\n    let result = {\r\n      viewLaterFilms: null,\r\n      viewedFilms: null,\r\n      favoriteFilms: null\r\n    };\r\n    //console.log('result=', result);\r\n    if (!this.localStorageAvailable(\"localStorage\")) return result;\r\n    this.localStorageRead();\r\n    let dataFromLocalStorage = this.filmoteka;\r\n    //console.log('dataFromLocalStorage=', dataFromLocalStorage);\r\n    // console.log('!dataFromLocalStorage=', !dataFromLocalStorage);\r\n    if (!dataFromLocalStorage) return result;\r\n    this.viewLaterFilms = this.filmoteka.viewLaterFilms;\r\n    this.viewedFilms = this.filmoteka.viewedFilms;\r\n    this.favoriteFilms = this.filmoteka.favoriteFilms;\r\n    result = {\r\n      viewLaterFilms: this.isFilmInList(\"viewLaterFilms\", id),\r\n      viewedFilms: this.isFilmInList(\"viewedFilms\", id),\r\n      favoriteFilms: this.isFilmInList(\"favoriteFilms\", id)\r\n    };\r\n    //console.log('result=', result);\r\n    return result;\r\n  }\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport debounce from \"debounce\";\r\nimport noavailable from \"../img/noavailable.png\";\r\n\r\n// const card = {\r\n//     \"Title\": \"Guardians of the Galaxy Vol. 2\",\r\n//     \"Year\": \"2017\",\r\n//     \"Rated\": \"PG-13\",\r\n//     \"Released\": \"05 May 2017\",\r\n//     \"Runtime\": \"136 min\",\r\n//     \"Genre\": \"Action, Adventure, Comedy, Sci-Fi\",\r\n//     \"Director\": \"James Gunn\",\r\n//     \"Writer\": \"James Gunn, Dan Abnett (based on the Marvel comics by), Andy Lanning (based on the Marvel comics by), Steve Englehart (Star-Lord created by), Steve Gan (Star-Lord created by), Jim Starlin (Gamora and Drax created by), Stan Lee (Groot created by), Larry Lieber (Groot created by), Jack Kirby (Groot created by), Bill Mantlo (Rocket Raccoon created by), Keith Giffen (Rocket Raccoon created by), Steve Gerber (Howard the Duck created by), Val Mayerik (Howard the Duck created by)\",\r\n//     \"Actors\": \"Chris Pratt, Zoe Saldana, Dave Bautista, Vin Diesel\",\r\n//     \"Plot\": \"The Guardians struggle to keep together as a team while dealing with their personal family issues, notably Star-Lord's encounter with his father the ambitious celestial being Ego.\",\r\n//     \"Language\": \"English\",\r\n//     \"Country\": \"USA\",\r\n//     \"Awards\": \"Nominated for 1 Oscar. Another 12 wins & 42 nominations.\",\r\n//     \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTg2MzI1MTg3OF5BMl5BanBnXkFtZTgwNTU3NDA2MTI@._V1_SX300.jpg\",\r\n//     \"Ratings\": [\r\n//     {\r\n//     \"Source\": \"Internet Movie Database\",\r\n//     \"Value\": \"7.7/10\"\r\n//     },\r\n//     {\r\n//     \"Source\": \"Rotten Tomatoes\",\r\n//     \"Value\": \"83%\"\r\n//     },\r\n//     {\r\n//     \"Source\": \"Metacritic\",\r\n//     \"Value\": \"67/100\"\r\n//     }\r\n//     ],\r\n//     \"Metascore\": \"67\",\r\n//     \"imdbRating\": \"7.7\",\r\n//     \"imdbVotes\": \"458,168\",\r\n//     \"imdbID\": \"tt3896198\",\r\n//     \"Type\": \"movie\",\r\n//     \"DVD\": \"22 Aug 2017\",\r\n//     \"BoxOffice\": \"$389,804,217\",\r\n//     \"Production\": \"Walt Disney Pictures\",\r\n//     \"Website\": \"https://marvel.com/guardians\",\r\n//     \"Response\": \"True\"\r\n// };\r\n\r\nexport default class View extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n\r\n    this.app = document.querySelector(\"#app\");\r\n    this.startPage();\r\n    this.mainPage();\r\n\r\n    this.input = this.app.querySelector(\".input\");\r\n    this.input.addEventListener(\r\n      \"input\",\r\n      debounce(this.onInput.bind(this), 300)\r\n    );\r\n\r\n    //film page\r\n    this.dataAboutFilmFromLocalStorage = null;\r\n    this.filmPageBtnText = {\r\n      viewedFilms: {\r\n        add: \"Отметить как просмотренный\",\r\n        remove: \"Удалить из просмотренных\"\r\n      },\r\n      viewLaterFilms: {\r\n        add: \"Запланировать просмотр\",\r\n        remove: \"Отменить просмотр\"\r\n      },\r\n      favoriteFilms: {\r\n        add: \"Добавить в избранное\",\r\n        remove: \"Удалить из избранного\"\r\n      }\r\n    };\r\n\r\n    this.app.addEventListener(\"click\", this.setListener.bind(this));\r\n  }\r\n\r\n  setListener(e) {\r\n    if (e.target.textContent === \"Очередь просмотра\") {\r\n      this.emit(\"onViewLaterFilmsBtn\");\r\n    }\r\n    if (e.target.textContent === \"Избранные\") {\r\n      this.emit(\"onFavotitesBtn\");\r\n    }\r\n\r\n    if (e.target.textContent === \"Просмотренные\") {\r\n      this.emit(\"onViewedFilmsBtn\");\r\n    }\r\n  }\r\n\r\n  startPage() {\r\n    this.header(this.app);\r\n    this.footer(this.app);\r\n  }\r\n\r\n  clearStarMaintPage() {\r\n    this.app.innerHTML = \"\";\r\n  }\r\n  container(root) {\r\n    const container = document.createElement(\"div\");\r\n    container.classList.add(\"container\");\r\n    root.append(container);\r\n    return container;\r\n  }\r\n\r\n  cardList(root) {\r\n    const cardList = document.createElement(\"div\");\r\n    cardList.classList.add(\"card-list\");\r\n    root.append(cardList);\r\n    return cardList;\r\n  }\r\n\r\n  header(root) {\r\n    const header = document.createElement(\"header\");\r\n    const logo = document.createElement(\"a\");\r\n    const logoSpanFirst = document.createElement(\"span\");\r\n    const i = document.createElement(\"i\");\r\n    const logoSpanSec = document.createElement(\"span\");\r\n    const menu = document.createElement(\"ul\");\r\n    const menuItemOne = document.createElement(\"li\");\r\n    const menuItemTwo = document.createElement(\"li\");\r\n    const mainPage = document.createElement(\"a\");\r\n    const myFilmoteka = document.createElement(\"a\");\r\n\r\n    // start routing\r\n    myFilmoteka.addEventListener(\"click\", e => {\r\n      if (e.target.tagName !== \"A\") return;\r\n      const state = {\r\n        page: e.target.getAttribute(\"href\")\r\n      };\r\n\r\n      this.makeFilmotekaPage();\r\n      history.pushState(state, \"\", state.page);\r\n      e.preventDefault();\r\n      return this.emit(\"onViewLaterFilmsBtn\");\r\n    });\r\n    //const returnFindsearch = localStorage.getItem(\"find\");\r\n    window.addEventListener(\"popstate\", e => {\r\n      e.preventDefault();\r\n      //console.log('model in routing=', this.model);\r\n      //if (document.location.pathname === \"/\" && returnFindsearch !==null) {\r\n      if (document.location.pathname === \"/\") {\r\n        this.clearStarMaintPage();\r\n        this.startPage();\r\n        this.mainPage();\r\n        this.emit(\"onBackToSearchResults\");\r\n        //this.updateCardsList(model);\r\n        history.replaceState({}, \"\", \"\");\r\n      }\r\n    });\r\n\r\n    mainPage.addEventListener(\"click\", e => {\r\n      e.preventDefault();\r\n      if (e.target.tagName !== \"A\") return;\r\n      this.clearStarMaintPage();\r\n      this.startPage();\r\n      this.mainPage();\r\n      // const state = {\r\n      //   page: e.target.getAttribute(\"href\")\r\n      // };\r\n      history.pushState({}, \"\", \"/\");\r\n      // history.replaceState({}, \"\", \"\");\r\n    });\r\n\r\n    logo.addEventListener(\"click\", e => {\r\n      e.preventDefault();\r\n      //if (e.target.tagName !== \"A\") return;\r\n      this.clearStarMaintPage();\r\n      this.startPage();\r\n      this.mainPage();\r\n      // const state = {\r\n      //   page: e.target.getAttribute(\"href\")\r\n      // };\r\n      history.pushState({}, \"\", \"/\");\r\n    });\r\n\r\n    window.addEventListener(\"popstate\", e => {\r\n      e.preventDefault();\r\n      if (document.location.pathname === \"/library.html\") {\r\n        this.clearStartMainPage();\r\n        this.makeFilmotekaPage();\r\n        this.emit(\"onViewLaterFilmsBtn\");\r\n        // const state = {\r\n        //   page: e.target.getAttribute(\"href\")\r\n        // };\r\n        history.replaceState({}, \"\", \"library.html\");\r\n      }\r\n    });\r\n\r\n    // end routing\r\n\r\n    header.classList.add(\"header\");\r\n    logo.classList.add(\"logo\");\r\n    i.classList.add(\"logo-icon\");\r\n    menu.classList.add(\"menu\");\r\n    menuItemOne.classList.add(\"menu-item\");\r\n    menuItemTwo.classList.add(\"menu-item\");\r\n    mainPage.classList.add(\"menu-link\");\r\n    myFilmoteka.classList.add(\"menu-link\");\r\n\r\n    mainPage.setAttribute(\"href\", \"/\");\r\n    myFilmoteka.setAttribute(\"href\", \"library.html\");\r\n    logo.setAttribute(\"href\", \"/\");\r\n\r\n    logoSpanFirst.textContent = \"film\";\r\n    logoSpanSec.textContent = \"teka\";\r\n    mainPage.textContent = \"Главная страница\";\r\n    myFilmoteka.textContent = \"Моя фильмотека\";\r\n\r\n    root.append(header);\r\n    header.append(logo);\r\n    logo.append(logoSpanFirst);\r\n    logo.append(i);\r\n    logo.append(logoSpanSec);\r\n    header.append(menu);\r\n    menu.append(menuItemOne);\r\n    menuItemOne.append(mainPage);\r\n    menu.append(menuItemTwo);\r\n    menuItemTwo.append(myFilmoteka);\r\n  }\r\n\r\n  footer(root) {\r\n    const footer = document.createElement(\"footer\");\r\n    const copy = document.createElement(\"span\");\r\n    const copyFirst = document.createElement(\"span\");\r\n    const copySec = document.createElement(\"span\");\r\n    const i = document.createElement(\"i\");\r\n    const team = document.createElement(\"a\");\r\n\r\n    footer.classList.add(\"footer\");\r\n    copy.classList.add(\"copy\");\r\n    team.classList.add(\"team\");\r\n    i.classList.add(\"heart-icon\");\r\n\r\n    copyFirst.textContent = \"Made with \";\r\n    copySec.textContent = \" by \";\r\n    team.textContent = \"team one\";\r\n\r\n    team.setAttribute(\"href\", \"#\");\r\n\r\n    root.append(footer);\r\n    footer.append(copy);\r\n    copy.append(copyFirst);\r\n    copy.append(i);\r\n    copy.append(copySec);\r\n    copy.append(team);\r\n  }\r\n\r\n  form(root) {\r\n    const input = document.createElement(\"input\");\r\n\r\n    input.classList.add(\"input\");\r\n    // adding event listener to input when it was created (fixed a bug)\r\n    input.addEventListener(\"input\", debounce(this.onInput.bind(this), 300));\r\n    root.append(input);\r\n  }\r\n\r\n  title(root) {\r\n    const title = document.createElement(\"h1\");\r\n    title.classList.add(\"title\");\r\n    title.textContent = \"Персональная фильмотека\";\r\n    root.append(title);\r\n  }\r\n\r\n  mainPage() {\r\n    const container = this.container(this.app);\r\n    this.title(container);\r\n    this.form(container);\r\n    this.cardList(container);\r\n  }\r\n\r\n  makeCard(card) {\r\n    const cardList = document.querySelector(\".card-list\");\r\n\r\n    const item = document.createElement(\"div\");\r\n    const title = document.createElement(\"p\");\r\n    const img = document.createElement(\"img\");\r\n    const link = document.createElement(\"a\");\r\n\r\n    item.classList.add(\"item\");\r\n    title.classList.add(\"card-title\");\r\n    img.classList.add(\"image\");\r\n    link.classList.add(\"card-link\");\r\n\r\n    link.addEventListener(\"click\", this.getFilmID.bind(this));\r\n    link.setAttribute(\"id\", card.imdbID);\r\n\r\n    // start routing for card==============================================\r\n\r\n    link.addEventListener(\"click\", e => {\r\n      e.preventDefault();\r\n      const idTarget = e.target.closest(\"a\");\r\n      const idT = idTarget.getAttribute(\"id\");\r\n      // console.log(idT);\r\n      const state = {\r\n        page: idTarget.getAttribute(\"id\")\r\n      };\r\n      // console.log(state.page);\r\n      history.pushState(state, \"\", \"movie.html?imdbID=\" + state.page);\r\n      window.addEventListener(\"popstate\", e => {\r\n        e.preventDefault();\r\n        if (document.location.pathname === \"/\") {\r\n          this.clearStarMaintPage();\r\n          this.startPage();\r\n          this.mainPage();\r\n          history.replaceState(state, \"\", \"\");\r\n        } else if (document.location.pathname === \"/movie.html\") {\r\n          this.emit(\"onFilmID\", idT);\r\n          history.replaceState(state, \"\", \"movie.html?imdbID=\" + state.page);\r\n        }\r\n      });\r\n    });\r\n\r\n    // end routing for card===================================================\r\n\r\n    let imgSrc;\r\n    card.Poster === \"N/A\" ? (imgSrc = noavailable) : (imgSrc = card.Poster);\r\n\r\n    img.setAttribute(\"src\", imgSrc);\r\n    link.setAttribute(\"href\", \"\");\r\n\r\n    title.textContent = card.Title;\r\n\r\n    item.append(link);\r\n    link.append(title);\r\n    link.append(img);\r\n    cardList.append(item);\r\n\r\n    return item;\r\n  }\r\n\r\n  makeCardPage(card, id) {\r\n    // console.log('inside makeCard');\r\n    const container = this.container(this.app);\r\n\r\n    let cardRating =\r\n      card.Ratings.length !== 0\r\n        ? `${card.Ratings[0].Value}  (${card.imdbVotes} votes)`\r\n        : null;\r\n\r\n    const shownProp = {\r\n      Awards: card.Awards,\r\n      Rating: cardRating,\r\n      Actors: card.Actors,\r\n      Country: card.Country,\r\n      Genre: card.Genre,\r\n      Runtime: card.Runtime\r\n    };\r\n\r\n    const cardPage = document.createElement(\"div\");\r\n    const cardImage = document.createElement(\"div\");\r\n    const img = document.createElement(\"img\");\r\n    const cardInfo = document.createElement(\"div\");\r\n    const cardTitle = document.createElement(\"h2\");\r\n    const description = document.createElement(\"p\");\r\n    const cardYear = document.createElement(\"span\");\r\n    const cardList = document.createElement(\"ul\");\r\n    const buttons = document.createElement(\"div\");\r\n\r\n    cardPage.classList.add(\"card-page\");\r\n    cardImage.classList.add(\"image-wrapper\");\r\n    cardTitle.classList.add(\"cardPage-title\");\r\n    description.classList.add(\"desc\");\r\n    cardYear.classList.add(\"card-year\");\r\n    img.classList.add(\"card-image\");\r\n    cardInfo.classList.add(\"card-info\");\r\n    cardList.classList.add(\"card-info__list\");\r\n    buttons.classList.add(\"buttons\");\r\n\r\n    let imgSrc;\r\n    card.Poster === \"N/A\" ? (imgSrc = noavailable) : (imgSrc = card.Poster);\r\n\r\n    img.setAttribute(\"src\", imgSrc);\r\n\r\n    description.textContent = card.Plot;\r\n    cardTitle.textContent = card.Title;\r\n    cardYear.textContent = card.Year;\r\n\r\n    container.append(cardPage);\r\n    cardPage.append(cardImage);\r\n    cardImage.append(img);\r\n\r\n    cardPage.append(cardInfo);\r\n    cardInfo.append(cardTitle);\r\n    cardInfo.append(description);\r\n    cardTitle.append(cardYear);\r\n    cardInfo.append(cardList);\r\n    cardInfo.append(buttons);\r\n\r\n    this.createFilmPageButtons(id, buttons);\r\n\r\n    for (const prop in shownProp) {\r\n      if (shownProp.hasOwnProperty(prop)) {\r\n        const infoKey = document.createElement(\"li\");\r\n        const keyValue = document.createElement(\"span\");\r\n\r\n        infoKey.textContent = `${prop}: `;\r\n        keyValue.textContent = shownProp[prop];\r\n\r\n        infoKey.classList.add(\"info-key\");\r\n        keyValue.classList.add(\"key-value\");\r\n\r\n        cardList.append(infoKey);\r\n        infoKey.append(keyValue);\r\n      }\r\n    }\r\n  }\r\n  //add some attribute to btn\r\n  addAttribute(DOMElement, attribute) {\r\n    return DOMElement.setAttribute(\"library-list\", attribute);\r\n  }\r\n  addActionAtrribute(DOMElement, action) {\r\n    return DOMElement.setAttribute(\"action\", action);\r\n  }\r\n  //take library list name and action type (add/delete) from btn\r\n  takeListNameAndAction(event) {\r\n    let libraryListName = event.target.getAttribute(\"library-list\");\r\n    //add action\r\n    //console.log('event=', event);\r\n    let action = event.target.getAttribute(\"action\");\r\n\r\n    let result = { libraryListName, action };\r\n    //console.log(\"result=\", result);\r\n\r\n    return this.emit(\"onHandleList\", result);\r\n  }\r\n\r\n  //\r\n  getDataAboutFilmFromLocalStorage(id) {\r\n    //console.log('id=', id);\r\n    this.emit(\"onCreateFilmPage\", id);\r\n  }\r\n\r\n  createFilmPageButtons(id, root) {\r\n    this.getDataAboutFilmFromLocalStorage(id);\r\n    // console.log(\r\n    //   \"this.dataAboutFilmFromLocalStorage=\",\r\n    //   this.dataAboutFilmFromLocalStorage\r\n    // );\r\n\r\n    //viewedFilms\r\n    const viewed = document.createElement(\"button\");\r\n    //console.log('this.addAttribute=', this.addAttribute);\r\n    this.addAttribute(viewed, \"viewedFilms\");\r\n    //console.log(\"viewed=\", viewed);\r\n    viewed.classList.add(\"button\");\r\n    //1 check for existing in some list and set a label and action attribute\r\n    if (!this.dataAboutFilmFromLocalStorage.viewedFilms) {\r\n      this.addActionAtrribute(viewed, \"add\");\r\n      viewed.textContent = this.filmPageBtnText.viewedFilms.add;\r\n    } else {\r\n      this.addActionAtrribute(viewed, \"remove\");\r\n      viewed.textContent = this.filmPageBtnText.viewedFilms.remove;\r\n    }\r\n    //2 take info about list and action\r\n    viewed.addEventListener(\"click\", this.takeListNameAndAction.bind(this));\r\n    //3 change label after click\r\n    viewed.addEventListener(\"click\", this.changeActionAndLabel.bind(this));\r\n    root.append(viewed);\r\n    //viewLaterFilms\r\n    const planed = document.createElement(\"button\");\r\n    planed.classList.add(\"button\");\r\n    this.addAttribute(planed, \"viewLaterFilms\");\r\n    //1 check for existing in some list and set a label\r\n    if (!this.dataAboutFilmFromLocalStorage.viewLaterFilms) {\r\n      this.addActionAtrribute(planed, \"add\");\r\n      planed.textContent = this.filmPageBtnText.viewLaterFilms.add;\r\n    } else {\r\n      this.addActionAtrribute(planed, \"remove\");\r\n      planed.textContent = this.filmPageBtnText.viewLaterFilms.remove;\r\n    }\r\n    //2 take info about list and action\r\n    planed.addEventListener(\"click\", this.takeListNameAndAction.bind(this));\r\n    //3 change label after click\r\n    planed.addEventListener(\"click\", this.changeActionAndLabel.bind(this));\r\n\r\n    root.append(planed);\r\n    //favoriteFilms\r\n    const favourites = document.createElement(\"button\");\r\n    favourites.classList.add(\"button\");\r\n    this.addAttribute(favourites, \"favoriteFilms\");\r\n    //1 check for existing in some list and set a label\r\n    if (!this.dataAboutFilmFromLocalStorage.favoriteFilms) {\r\n      this.addActionAtrribute(favourites, \"add\");\r\n      favourites.textContent = this.filmPageBtnText.favoriteFilms.add;\r\n    } else {\r\n      this.addActionAtrribute(favourites, \"remove\");\r\n      favourites.textContent = this.filmPageBtnText.favoriteFilms.remove;\r\n    }\r\n    //2 take info about list and action\r\n    favourites.addEventListener(\"click\", this.takeListNameAndAction.bind(this));\r\n    //3 change label after click\r\n    favourites.addEventListener(\"click\", this.changeActionAndLabel.bind(this));\r\n    root.append(favourites);\r\n  }\r\n\r\n  changeActionAndLabel(event) {\r\n    if (event.target.nodeName !== \"BUTTON\") return;\r\n    // console.log(\"inside changeActionAndLabel\");\r\n    let action = event.target.getAttribute(\"action\");\r\n    let list = event.target.getAttribute(\"library-list\");\r\n    // console.log(\"action =\", action);\r\n    // console.log(\"list =\", list);\r\n    // console.log(\"action === add\", action === \"add\");\r\n    // console.log(\"action === add\", action === \"add\");\r\n    let label = \"\";\r\n    if (action === \"add\") {\r\n      action = \"remove\";\r\n      label = this.filmPageBtnText[list].remove;\r\n    } else {\r\n      action = \"add\";\r\n      label = this.filmPageBtnText[list].add;\r\n    }\r\n    this.addActionAtrribute(event.target, action);\r\n    event.target.textContent = label;\r\n  }\r\n\r\n  makeButton(text, root) {\r\n    const button = document.createElement(\"button\");\r\n    button.classList.add(\"button\");\r\n    button.textContent = text;\r\n    root.append(button);\r\n  }\r\n\r\n  //handle search methods\r\n  clearInput(event) {\r\n    return (event.target.value = \"\");\r\n  }\r\n\r\n  onInput(event) {\r\n    let inputText = event.target.value;\r\n    if (inputText === \"\") {\r\n      this.clearCardsList();\r\n    }\r\n    this.emit(\"onInputFilmName\", inputText);\r\n  }\r\n\r\n  //clear search results\r\n  clearCardsList() {\r\n    const cardList = document.querySelector(\".card-list\");\r\n    cardList.innerHTML = \"\";\r\n  }\r\n\r\n  //render search results\r\n  updateCardsList(model) {\r\n    // console.log('model in view', model);\r\n    // console.log(\"model.queryFilmList=\", model.queryFilmList);\r\n    // console.log('lastQueryTotal=', lastQueryTotal);\r\n    // console.log('model.queryFilmList=', model.queryFilmList);\r\n    // const cardList = this.cardList(container);\r\n    // console.log(\"model.queryFilmList=\", model.queryFilmList);\r\n\r\n    const cardList = document.querySelector(\".card-list\");\r\n\r\n    // cardList.addEventListener('click', this.openFilmPage.bind(this));\r\n\r\n    this.clearCardsList();\r\n    // model.queryFilmList;\r\n    //console.log(\"arrayOfFilms=\", arrayOfFilms);\r\n    let items = [];\r\n    model.queryFilmList.forEach(item => {\r\n      // console.log(\"item=\", item);\r\n      let newCard = this.makeCard(item);\r\n      // console.log(\"newCard=\", newCard);\r\n      items.push(newCard);\r\n      cardList.append(newCard);\r\n    });\r\n\r\n    // Работа с страницами поиска\r\n\r\n    const currPage = model.lastPage;\r\n    const numPages = Math.ceil(model.lastQueryTotal / 10);\r\n\r\n    const controls = document.createElement(\"div\");\r\n    controls.classList.add(\"controls\");\r\n\r\n    const prev = this.createPaginationButton(\"Prev\", currPage, numPages);\r\n    controls.append(prev);\r\n    const pages = this.createPaginationButton(\"Pages\", currPage, numPages);\r\n    controls.append(pages);\r\n    const next = this.createPaginationButton(\"Next\", currPage, numPages);\r\n    controls.append(next);\r\n    //console.log('model=', model);\r\n    if (model.queryFilmList.length === 0) return;\r\n    cardList.append(controls);\r\n  }\r\n\r\n  handlePagination(event) {\r\n    if (event.target.nodeName !== \"BUTTON\") return;\r\n    let btnType = event.target.attributes.btnname.value;\r\n    let currPage = event.target.attributes.currPage.value;\r\n    let numPages = event.target.attributes.numpages.value;\r\n    // console.log(\"event=\",event);\r\n    // console.log(\"btnType=\",btnType);\r\n    // console.log(\"currPage=\", currPage);\r\n    // console.log(\"numPages=\", numPages);\r\n    // console.log(\"this=\", this);\r\n    return this.emit(\"onPagination\", btnType, currPage, numPages);\r\n  }\r\n\r\n  createPaginationButton(btnName, currPage, numPages) {\r\n    const btn = document.createElement(\"button\");\r\n    btn.classList.add(\"button\");\r\n    btn.setAttribute(\"btnName\", btnName);\r\n    btn.setAttribute(\"currPage\", currPage);\r\n    btn.setAttribute(\"numPages\", numPages);\r\n    if (btnName === \"Next\" || btnName === \"Prev\") {\r\n      btn.textContent = btnName;\r\n      // console.log('this=',this);\r\n      if (currPage === 1 && btnName === \"Prev\") {\r\n        btn.disabled = true;\r\n        btn.classList.add(\"notactiveBtn\");\r\n      }\r\n      if (currPage == numPages && btnName === \"Next\") {\r\n        btn.disabled = true;\r\n        btn.classList.add(\"notactiveBtn\");\r\n      }\r\n      btn.addEventListener(\"click\", this.handlePagination.bind(this));\r\n    }\r\n    if (btnName === \"Pages\") {\r\n      btn.textContent = currPage + \" / \" + numPages;\r\n      btn.disabled = true;\r\n      btn.classList.add(\"notactiveBtn\");\r\n    }\r\n    // console.log(\"btn in createPaginationButton=\", btn);\r\n    return btn;\r\n  }\r\n\r\n  clearStartMainPage() {\r\n    const container = document.querySelector(\".container\");\r\n    container.innerHTML = \"\";\r\n  }\r\n\r\n  makeLibraryButton(text, root) {\r\n    //console.log(\"this=\", this);\r\n    const button = document.createElement(\"button\");\r\n    button.classList.add(\"button\");\r\n    // for my filmoteka\r\n    button.classList.add(\"btn-filmoteka\");\r\n    //button.classList.add(\"activ-btn\");\r\n    button.textContent = text;\r\n    button.addEventListener(\"click\", this.switchBtn);\r\n    root.append(button);\r\n  }\r\n  //switch marked buttons\r\n  switchBtn(event) {\r\n    //console.log('event', event);\r\n    if (event.target.nodeName !== \"BUTTON\") return;\r\n    const parentNode = event.target.parentNode;\r\n    //console.log('parentNode=', parentNode);\r\n    parentNode.childNodes.forEach(node => node.classList.remove(\"activ-btn\"));\r\n    event.target.classList.add(\"activ-btn\");\r\n  }\r\n\r\n  makeFilmotekaPage() {\r\n    const container = document.querySelector(\".container\");\r\n    container.innerHTML = \"\";\r\n\r\n    const buttons = document.createElement(\"div\");\r\n    buttons.classList.add(\"filmoteka-buttons\");\r\n\r\n    this.makeLibraryButton(\"Очередь просмотра\", buttons);\r\n    this.makeLibraryButton(\"Избранные\", buttons);\r\n    this.makeLibraryButton(\"Просмотренные\", buttons);\r\n\r\n    container.append(buttons);\r\n    this.cardList(container);\r\n\r\n    const firstBtn = buttons.querySelector(\"button\");\r\n    firstBtn.classList.add(\"activ-btn\");\r\n    //console.log('model=', model);\r\n    //console.log(\"this=\", this);\r\n    //firstBtn.autofocus = true;\r\n  }\r\n\r\n  deleteAutofocus() {\r\n    const firstBtn = document.querySelector(\"button\");\r\n    firstBtn.autofocus = false;\r\n  }\r\n\r\n  ifNothingToRender() {\r\n    const cardList = document.querySelector(\".card-list\");\r\n    const message = document.createElement(\"p\");\r\n\r\n    message.classList.add(\"message\");\r\n    message.textContent = \"Нет данных для отображения\";\r\n\r\n    cardList.append(message);\r\n  }\r\n\r\n  cardsRender(arr) {\r\n    //console.log(\"arr=\", arr);\r\n    arr.forEach(element => {\r\n      this.makeCard(element);\r\n    });\r\n  }\r\n\r\n  //create film page\r\n  getFilmID(event) {\r\n    // console.log(\"event=\", event);\r\n    // let parenDiv=event.target.closest('div');\r\n    // console.log(\"parenDiv=\", parenDiv);\r\n    let target = event.target.closest(\"a\");\r\n    // console.log(\"target=\", target);\r\n    let id = target.getAttribute(\"id\");\r\n    return this.emit(\"onFilmID\", id);\r\n    // console.log(\"id=\", id);\r\n  }\r\n\r\n  //show film page\r\n  createFilmPage(data, id) {\r\n    // console.log('data in view=', data);\r\n    this.clearStarMaintPage();\r\n    this.startPage();\r\n    this.makeCardPage(data, id);\r\n  }\r\n}\r\n","export default class Controller {\r\n  constructor(model, view) {\r\n    this.model = model;\r\n    this.view = view;\r\n\r\n    view.on(\"onInputFilmName\", this.handleSearch.bind(this));\r\n    view.on(\"onFilmID\", this.handleFilmID.bind(this));\r\n    view.on(\"onPagination\", this.handlePaginationEvent.bind(this));\r\n\r\n    view.on(\"onCreateFilmPage\", this.handleCreateFilmPage.bind(this));\r\n    view.on(\"onHandleList\", this.handleList.bind(this));\r\n    \r\n    view.on(\"onBackToSearchResults\", this.handleBackToSearchResults.bind(this));\r\n    //myFilmoteka listeners\r\n\r\n    view.on('onViewLaterFilmsBtn', this.handleViewLaterFilms.bind(this));\r\n    view.on('onFavotitesBtn', this.handleFavorites.bind(this));\r\n    view.on('onViewedFilmsBtn', this.handleViewedFilms.bind(this));\r\n  }\r\n\r\n  handleBackToSearchResults(){\r\n    return this.view.updateCardsList(this.model);\r\n  }\r\n\r\n  handleSearch(query, page) {\r\n    this.model.handleSearchQuery(query, page).then(() => {\r\n      //console.log('this.model=', this.model);\r\n      return this.view.updateCardsList(this.model);\r\n    });\r\n  }\r\n\r\n  handleNextPageSearch(text, page) {\r\n    this.model.handleSearchQuery(text, page).then((resolve, reject) => {\r\n      return this.view.updateCardsList(this.model);\r\n    });\r\n  }\r\n\r\n  handleFilmID(id) {\r\n    this.model.takeFilmInfo(id).then(data => {\r\n      this.view.createFilmPage(data, id); //this.view.createFilmPageButtons(id)\r\n    });\r\n    // console.log(\"this.model.takeFilmInfo(id)=\", this.model.takeFilmInfo(id));\r\n  }\r\n\r\n  //handle Pagination\r\n  handlePaginationEvent(btnName, currPage, numPages) {\r\n    // console.log(\"this.model=\", this.model);\r\n    this.model\r\n      .resolvePages(btnName, currPage, numPages)\r\n      .then((resolve, reject) => {\r\n        return this.view.updateCardsList(this.model);\r\n      });\r\n  }\r\n  //handle film page\r\n  handleCreateFilmPage(id) {  \r\n    let result = this.model.takeFilmInfoFromLocalStorage(id);\r\n    //console.log(\"result =\", result);\r\n    return this.view.dataAboutFilmFromLocalStorage = result;\r\n  }\r\n\r\n  handleList({ libraryListName, action }) {\r\n    this.model.handleListWithAction({ libraryListName, action });\r\n  }\r\n\r\n  //myFilmoteka listeners\r\n\r\n  handleViewLaterFilms() {\r\n\r\n    const data = this.model.getViewLaterFilmsFromLS();\r\n\r\n    if(data.length === 0) {\r\n      this.view.clearCardsList(); \r\n      this.view.ifNothingToRender();\r\n    } else {\r\n      this.view.clearCardsList();\r\n      this.view.cardsRender(data);\r\n    } \r\n  }\r\n\r\n  handleFavorites() {\r\n\r\n    const data = this.model.getFavoriteFilmsFromLS();\r\n\r\n    if(data.length === 0) {\r\n      this.view.clearCardsList();\r\n      this.view.deleteAutofocus();\r\n      this.view.ifNothingToRender();\r\n    } else {\r\n      this.view.clearCardsList();\r\n      this.view.deleteAutofocus();\r\n\r\n      this.view.cardsRender(data);\r\n    }\r\n  }\r\n\r\n  handleViewedFilms() {\r\n\r\n    const data = this.model.getViewedFilmsFromLS();\r\n\r\n    if(data.length === 0) {\r\n      this.view.clearCardsList();\r\n      this.view.deleteAutofocus();\r\n      this.view.ifNothingToRender();\r\n    } else {\r\n      this.view.clearCardsList();\r\n      this.view.deleteAutofocus();\r\n      this.view.cardsRender(data);\r\n    }\r\n  }\r\n\r\n}\r\n","import \"../styles/style.sass\";\r\n\r\nimport Model from \"./model\";\r\nimport View from \"./view\";\r\nimport Controller from \"./controller\";\r\nimport \"./pag\";\r\n\r\nconst view = new View();\r\nconst model = new Model();\r\n\r\nnew Controller(model, view);\r\n\r\nconst hrefShare = window.location.search;\r\n\r\nfunction checkRedirect(hrefShare) {\r\n  if (hrefShare.length) {\r\n    const isRedirect = hrefShare\r\n      .split(\"?\")[1]\r\n      .split(\"&\")\r\n      .includes(\"redirected=true\");\r\n\r\n    if (isRedirect) {\r\n      const redirectPage = hrefShare\r\n        .split(\"?\")[1]\r\n        .split(\"&\")\r\n        .filter(el => el.includes(\"page\"))[0]\r\n        .split(\"=\")[1];\r\n      if (redirectPage === \"movie\") {\r\n        const arr = hrefShare.split(\"mdbID=\");\r\n        const renderById = arr[1];\r\n        // console.log(renderById);\r\n        view.emit(\"onFilmID\", renderById);\r\n        history.replaceState({}, \"\", \"/movie.html?imdbID=\" + renderById);\r\n      }\r\n\r\n      if(redirectPage === \"library\"){\r\n        view.clearStartMainPage();\r\n        view.makeFilmotekaPage();\r\n        view.emit('onViewLaterFilmsBtn');\r\n        history.replaceState({}, \"\", 'library.html');\r\n      }\r\n    }\r\n  }\r\n}\r\ncheckRedirect(hrefShare);\r\n"],"sourceRoot":""}